#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
add-scripted-to-path.py

:copyright: (c) 2014 by Alexander Skiba <skiba@icg.tugraz.at>
:licence: MIT
:bugreports: skiba@icg.tugraz.at

Adds the newly checked out "scripted" folder to the bash path.

"""

import os
import library.feedback as feedback

# strings
EXPORT = "export PATH"

def main():
    """Add the scripted directory to the bash PATH."""

    feedback.register(os.path.basename(__file__).upper())

    content = None
    profile = os.path.expanduser("~/.bash_profile")
    path_string = build_string()

    try:
        with open(profile, "r") as profile_file:
            content = profile_file.read()

        if path_string not in content:
            feedback.give("'scripted' is not in the PATH. Adding.")

            if EXPORT in content:
                feedback.give("Extending current export statement.")
                content = content.replace(EXPORT,
                    build_extended_path(path_string))

            else:
                feedback.give("Adding new export statement.")
                content = content + "\n" + build_extended_path(path_string)

            with open(profile, "w") as profile_file:
                profile_file.write(content)

        else:
            feedback.give("Nothing to do.")

    except IOError:
        write_bash_profile(profile)
        feedback.give("Wrote new bash_profile.")

    feedback.give("Done.")
    feedback.give("You can now run \"source ~/.bash_profile\".")

def write_bash_profile(profile):
    """Create a new .bash_profile file with only our data."""

    new_content = build_extended_path(build_string()) + "\n"
    with open(profile, "w") as profile_file:
        profile_file.write(new_content)


def build_string():
    """Extend the PATH variable with the directory containing these scripts."""

    script_directory = os.path.dirname(os.path.realpath(__file__))
    path_string = "PATH=$PATH:" + script_directory

    return path_string


def build_extended_path(path_string):
    """Extend the previously built path_string with the variable export."""

    replacement_string = path_string + "\n" + EXPORT

    return replacement_string


if __name__ == '__main__':
    main()
